trigger:
- master

stages:
- stage: Build_Windows
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-2019'
    steps:
    - script: |
        cd AzurePipelinesCli
        dotnet tool install -g dotnet-warp
        dotnet warp -l aggressive --verbose
      displayName: 'Build and Packing'

    - publish: $(Build.SourcesDirectory)/AzurePipelinesCli/pipeline.exe
      artifact: win-x64
      displayName: 'Publish artifact'

- stage: Build_Linux
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        cd AzurePipelinesCli
        dotnet tool install -g dotnet-warp
        dotnet warp -l aggressive
      displayName: 'Build and Packing'

    - publish: $(Build.SourcesDirectory)/AzurePipelinesCli/pipeline
      artifact: linux-x64
      displayName: 'Publish artifact'

- stage: Build_MacOS
  jobs:
  - job: Build
    pool:
      vmImage: 'macOS-10.14'
    steps:
    - script: |
        cd AzurePipelinesCli
        dotnet tool install -g dotnet-warp
        dotnet warp -l aggressive
      displayName: 'Build and Packing'

    - publish: $(Build.SourcesDirectory)/AzurePipelinesCli/pipeline
      artifact: macos-x64
      displayName: 'Publish artifact'

- stage: Publish
  dependsOn:
  - Build_Windows
  - Build_Linux
  - Build_MacOS
  jobs:
  - job: Publish
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - checkout: none
    - download: current